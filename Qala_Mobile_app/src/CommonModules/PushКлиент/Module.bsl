Процедура ПодключитьОбработчикУведомленийИзОбщегоМодуля() Экспорт
	#Если МобильноеПриложениеКлиент Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбрабочикPush", PushКлиент);
		ДоставляемыеУведомления.ПодключитьОбработчикУведомлений(ОписаниеОповещения);
	#КонецЕсли 
КонецПроцедуры
 
Процедура ОбрабочикPush(Уведомление, Локальное, Показано, ДопПараметр) Экспорт
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Уведомление.Текст);
	//ПерейтиПоНавигационнойСсылке(Уведомление.Данные);
	ДобавитьВРегистрОповещений(Уведомление.Данные);
	МодульОбмена.ВыполнитьЗагрузкуДанных("");
КонецПроцедуры

Процедура ДобавитьВРегистрОповещений(Данные)
	СтруктураДанных = Десериализовать(Данные);
	Вспомогательный.ДобавитьВРегистрОповещенийНаСервере(СтруктураДанных);
	//ФормаРС = ПолучитьФорму("Обработка.РабочийСтол.Форма.Форма");
	//ФормаРС.Элементы.Уведомления.Обновить();
КонецПроцедуры	


Процедура ОбновитьИдентификаторПодписчика() Экспорт
	#Если МобильноеПриложениеКлиент Тогда
	Идентификатор = ДоставляемыеУведомления.ПолучитьИдентификаторПодписчикаУведомлений("26160336734");
	МодульОбмена.ОбновитьИдентификаторПодписчикаНаСервере(Сериализовать(Идентификатор));
	#КонецЕсли 
КонецПроцедуры


Функция Сериализовать(ОбъектСериализации) Экспорт
	#Если МобильноеПриложениеКлиент Тогда
	ДеревоВОбъектеXDTO = СериализаторXDTO.ЗаписатьXDTO(ОбъектСериализации);
	МойXML = Новый ЗаписьXML;
	МойXML.УстановитьСтроку();
	ПараметрыЗаписиXML = Новый ПараметрыЗаписиXML("UTF-8", "1.0", Ложь); 
	ФабрикаXDTO.ЗаписатьXML(МойXML, ДеревоВОбъектеXDTO);
	Возврат МойXML.Закрыть();
	#КонецЕсли
КонецФункции

Функция Десериализовать(XMLСтруктураСериализованногоОбъекта) Экспорт
	#Если МобильноеПриложениеКлиент Тогда
	ЧтениеXMLДанных = Новый ЧтениеXML;
	ЧтениеXMLДанных.УстановитьСтроку(XMLСтруктураСериализованногоОбъекта);
	ТЗ = СериализаторXDTO.ПрочитатьXML(ЧтениеXMLДанных);
	ЧтениеXMLДанных.Закрыть();  
	Возврат ТЗ;
	#КонецЕсли
КонецФункции