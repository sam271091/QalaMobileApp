&НаКлиенте
Процедура Проверить(Команда)
	СозданиеДинамическогоСоединенияНаСервере(ИБ);
КонецПроцедуры

&НаСервереБезКонтекста 
Процедура СозданиеДинамическогоСоединенияНаСервере(ИБ)  Экспорт 
	Сообщение = Новый СообщениеПользователю;
	Попытка
	ВСПрокси = ПодключитьСсылку();	
	Ответ = ВСПрокси.CheckConnection();
	Сообщение.Текст = "Подключение установлено!";
	Исключение
	Сообщение.Текст = "Ошибка подключения!";	
	КонецПопытки;	
	Сообщение.Поле = "";
	Сообщение.Сообщить(); 
	
	
	
КонецПроцедуры	
&НаСервереБезКонтекста 
Функция ПодключитьСсылку()
	СсылкаВебСервиса = МодульОбмена.ПодключитьСсылку();
	Возврат СсылкаВебСервиса;
КонецФункции	
&НаСервереБезКонтекста 
Функция ПолучитьСписокотчетов()
	ВСПрокси = ПодключитьСсылку();
	Ответ = ВСПрокси.GetReportsList();
	Возврат Ответ.Получить();
КонецФункции	


&НаСервереБезКонтекста 
Функция ПолучитьСписокНастроек(ИмяОтчета,ИБ)
	ВСПрокси = ПодключитьСсылку();
	
	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("ИмяОтчета",ИмяОтчета);
	
	Ответ = ВСПрокси.GetSettingslist(Новый ХранилищеЗначения(СтруктураНастроек,новый СжатиеДанных(9)));
	Возврат Ответ.Получить();
КонецФункции	


&НаКлиенте
Процедура ОтчетыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	//СписокОтчетов = ПолучитьСписокотчетов();
	//
	//Для Каждого Стр Из СписокОтчетов Цикл 
	//	Элементы.Отчеты.СписокВыбора.Добавить(Стр.Значение,Стр.Представление);
	//КонецЦикла;	

	СтандартнаяОбработка = Ложь;
	
	ВыбранныйЭлемент = ЭтаФорма.ВыбратьИзСписка(Элементы.Отчеты.СписокВыбора, Элемент);	
	
	Если ВыбранныйЭлемент <> Неопределено Тогда 
	Отчет =   ВыбранныйЭлемент.Представление;
	Объект.ОтчетЗначение =  ВыбранныйЭлемент.Значение;
	
	
    СписокНастроек = ПолучитьСписокНастроек(ВыбранныйЭлемент.Значение,ИБ);
	
	
	Элементы.Настройка.СписокВыбора.Очистить();
	
	Настройка = Неопределено;
	
	Для Каждого Стр Из СписокНастроек Цикл 
		Элементы.Настройка.СписокВыбора.Добавить(Стр,Стр);
	КонецЦикла;

	
	
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьОтчеты(Команда)
	

	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
		
	
	СписокОтчетов = ПолучитьСписокотчетов();
	
	Для Каждого Стр Из СписокОтчетов Цикл 
		Элементы.Отчеты.СписокВыбора.Добавить(Стр.Значение,Стр.Представление);
	КонецЦикла;
	 
КонецПроцедуры



	

&НаКлиенте
Процедура Сформировать(Команда)
	
	Если Не ЗначениеЗаполнено(Отчет) Тогда 
		Сообщить("Выберите Отчет!");
		Возврат;
	КонецЕсли;
	
	//Если Не ЗначениеЗаполнено(Настройка) Тогда 
	//	Сообщить("Выберите настройку!");
	//	Возврат;
	//КонецЕсли;	
	
	ТабДок = Элементы.ТабДок;
	ТабДок.АвтоМасштаб = Ложь;
	ТабДок.МасштабПечати = 30;
	ПолучитьМакет(ТабДок);

	
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьМакет(ТабДокумент)
	ВСПрокси = ПодключитьСсылку();
	
	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("ИмяОтчета",Объект.ОтчетЗначение);
	СтруктураНастроек.Вставить("Настройка",Объект.НастройкаЗначение);
	СтруктураНастроек.Вставить("Период",Объект.Период);
	
	
	//Ответ =  ВСПрокси.GenerateReport(Новый ХранилищеЗначения(СтруктураНастроек,новый СжатиеДанных(9)));
	
	Ответ =  ВСПрокси.GenerateReport(Новый ХранилищеЗначения(СтруктураНастроек,новый СжатиеДанных(9)));
	
	HTMLСтрока = Ответ;
	
	//ТабДокумент =  Ответ.Получить();
	//
	//ТабДокумент.ПоказатьУровеньГруппировокСтрок(0);
	
КонецПроцедуры	

&НаКлиенте
Процедура НастройкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
    СтандартнаяОбработка = Ложь;
	
	ВыбранныйЭлемент = ЭтаФорма.ВыбратьИзСписка(Элементы.Настройка.СписокВыбора, Элемент);	
	
	Если ВыбранныйЭлемент <> Неопределено Тогда 
	Настройка =   ВыбранныйЭлемент.Представление;
	Объект.НастройкаЗначение =  ВыбранныйЭлемент.Значение;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Свернуть(Команда)
	Если Элементы.Группа1.Видимость = Истина Тогда 
		Элементы.Группа1.Видимость = Ложь;
		Элементы.Группа2.Видимость = Ложь;
		
		Элементы.Свернуть.Заголовок = "Развернуть";
	Иначе 
		Элементы.Группа1.Видимость = Истина;
		Элементы.Группа2.Видимость = Истина;
		
		Элементы.Свернуть.Заголовок = "Свернуть";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетыПриИзменении(Элемент)
	//Объект.ОтчетЗначение
КонецПроцедуры

&НаКлиенте
Процедура ТабДокВыбор(Элемент, Область, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Структура = Новый Структура;
	Структура.Вставить("ТабДок",ТабДок);
	ОткрытьФорму("Обработка.Монитор.Форма.ФормаУвеличенная",Структура);
КонецПроцедуры

&НаКлиенте
Процедура ТабДокОбработкаДополнительнойРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ТабДокОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры
